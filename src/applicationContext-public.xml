<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	 xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	">
	<!-- 
		org.hibernate.HibernateException: Unable to get the default Bean Validation factory
		创建service,通过new获得SessionFactory有验证异常。JavaEE6中bean-validator,jar。
		删除或者在hibernate.cfg.xml中加入
		<property name="javax.persistence.validation.mode">none</property>
	 -->
	 
	 
	 <!--  
	 		所有Properties文件应该交给Spring管理，而且在启动时加载
	 		spring支持两种方式，property-placeholder仅在xml中使用
			<context:property-placeholder location="classpath:conn.properties"/>
	 -->
	 
	<context:component-scan base-package="cn.it.shop.."></context:component-scan>
	
	<!--  
	 		所有Properties文件应该交给Spring管理，而且在启动时加载
	 		spring支持两种方式，property-placeholder仅在xml中使用
			<context:property-placeholder location="classpath:conn.properties"/>
	 -->
	 <!-- xml方式，和<context:property-placeholder location="classpath:conn.properties"/>一样  -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<array>
				<!-- 
				<value>classpath:conn.properties</value>
				<value>classpath:remote.properties</value> 
				-->
				<value>classpath:remote_pzjs.properties</value>
			</array>
		</property>
	</bean>
	
	<!-- 仅支持注解方式 -->
	<bean id="prop" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<array>
				<!-- 
				<value>classpath:public.properties</value>
				<value>classpath:publicOnLine.properties</value>
				<value>classpath:pay.properties</value>
				-->
				<value>classpath:publicOnLine_pzjs.properties</value> 
				<value>classpath:pay_pzjs.properties</value>
				
			</array>
		</property>
	</bean>
	
	<bean id="dataSource" class="${dataSource}">
		<property name="driverClass" value="${driverClass}"/>
		<property name="jdbcUrl" value="${jdbcUrl}"/>
		<property name="user" value="${user}"/>
		<property name="password" value="${password}"/>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<tx:advice id="adivce" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save" propagation="REQUIRED"/>
			<tx:method name="update" propagation="REQUIRED"/>
			<tx:method name="delete" propagation="REQUIRED"/>
			<tx:method name="*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<!-- 配置那些包的类要切入事务 -->
		<aop:pointcut expression="execution(* cn.it.shop.service.impl.*.*(..))" id="pointcut"/>
		<!-- 通知+切面表达式，才是完整的切入路径 -->
		<aop:advisor advice-ref="adivce" pointcut-ref="pointcut"/>
	</aop:config>
</beans>